name: Deploy Digital Ocean Infra
run-name: Deploy to ${{ github.ref_name }} by @${{ github.actor }}
on:
  workflow_dispatch:
  push:
    branches:
      - staging
      - prod

env:
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Format files
        working-directory: terraform
        continue-on-error: true
        run: tofu fmt -check

      - name: Init OpenTofu
        working-directory: terraform
        run: tofu init

      - name: Switch workspace
        working-directory: terraform
        run: tofu workspace select -or-create ${{ github.ref_name }}

      #   - name: Create terraform var file
      #     working-directory: infra
      #     run: |
      #       echo "cluster_node_ssh_public_key = \"${{ secrets.SSH_PUBLIC_KEY }}\"" >> terraform.tfvars

      - name: Plan changes
        working-directory: terraform
        run: tofu plan -var-file="environments/${{ github.ref_name }}.tfvars" -input=false

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Init OpenTofu
        working-directory: terraform
        run: tofu init

      - name: Switch workspace
        working-directory: terraform
        run: tofu workspace select -or-create ${{ github.ref_name }}

      # - name: Create terraform var file
      #   working-directory: infra
      #   run: |
      #     echo "cluster_node_ssh_public_key = \"${{ secrets.SSH_PUBLIC_KEY }}\"" >> terraform.tfvars

      - name: Apply changes
        working-directory: terraform
        run: tofu apply -var-file="environments/${{ github.ref_name }}.tfvars" -auto-approve

      - name: Store outputs
        working-directory: terraform
        run: terraform output -json > output.json

      - uses: actions/upload-artifact@master
        with:
          name: tf-ouput
          path: terraform/output.json

  # install-argocd:
  #   runs-on: ubuntu-latest
  #   needs: apply
  #   environment: ${{ github.ref_name }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_TOKEN }}

  #     - name: Get kubeconfig
  #       run: doctl kubernetes cluster kubeconfig save {{ APP_CLUSTER_NAME }}

  #     - uses: actions/download-artifact@master
  #       with:
  #         name: tf-output
  #         path: .

  #     - uses: actions-hub/kubectl@master
  #       name: Install argocd
  #       with:
  #         args: apply -k https://github.com/argoproj/argo-cd/manifests/crds\?ref\=stable
