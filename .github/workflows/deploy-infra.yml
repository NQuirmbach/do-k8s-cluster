name: Deploy Digital Ocean Infra
run-name: "Deploy to ${{ github.ref_name }}: ${{ github.event.head_commit.message }}"
on:
  workflow_dispatch:
  push:
    branches:
      - staging
      - prod

env:
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Format files
        working-directory: terraform
        continue-on-error: true
        run: tofu fmt -check

      - name: Init OpenTofu
        working-directory: terraform
        run: tofu init

      - name: Switch workspace
        working-directory: terraform
        run: tofu workspace select -or-create ${{ github.ref_name }}

      - name: Plan changes
        working-directory: terraform
        run: tofu plan -var-file="environments/${{ github.ref_name }}.tfvars" -input=false

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Init OpenTofu
        working-directory: terraform
        run: tofu init

      - name: Switch workspace
        working-directory: terraform
        run: tofu workspace select -or-create ${{ github.ref_name }}

      - name: Apply changes
        working-directory: terraform
        run: tofu apply -var-file="environments/${{ github.ref_name }}.tfvars" -auto-approve

      - name: Store outputs
        working-directory: terraform
        run: terraform output -json > tf-output.json

      - uses: actions/upload-artifact@master
        with:
          name: tf-output
          path: terraform/tf-output.json

  install-argocd:
    runs-on: ubuntu-latest
    needs: apply
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - uses: actions/download-artifact@master
        with:
          name: tf-output
          path: .

      - name: Get kubeconfig
        run: |
          cluster_name=$(jq ".cluster_name.value" -r tf-output.json)
          echo "Found cluster '$cluster_name'"
          doctl kubernetes cluster kubeconfig save $cluster_name
          which kubectl

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: cat $HOME/.kube/config | base64

      - uses: actions-hub/kubectl@master
        name: Install argocd
        with:
          args: apply -k https://github.com/argoproj/argo-cd/manifests/crds\?ref\=stable
